# Copyright (c) 2018 Norio Nomura
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Docker Build

on:
  push:
    branches: [master]
    paths: 
      - '.dockerignore'
      - '.github/workflows/docker-build.yml'
      - 'Dockerfile'
      - 'entrypoint.sh'
  pull_request:
    paths: 
      - '.dockerignore'
      - '.github/workflows/docker-build.yml'
      - 'Dockerfile'
      - 'entrypoint.sh'

jobs:
  DockerBuild:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Docker Build
        run: docker build -t action-swiftlint .

      - name: Exit Status on Errors
        run: |
          STATUS=$(docker run -v $(pwd):$(pwd) -w $(pwd) --rm action-swiftlint &>/dev/null; echo $?)
          [[ $STATUS == "2" ]]
        working-directory: ./test/errors
        shell: bash

      - name: Exit Status on No lintable files
        run: |
          STATUS=$(docker run -v $(pwd):$(pwd) -w $(pwd) --rm action-swiftlint &>/dev/null; echo $?)
          [[ $STATUS == "1" ]]
        working-directory: ./test/no-lintable-files
        shell: bash

      - name: Exit Status on Warnings
        run: |
          STATUS=$(docker run -v $(pwd):$(pwd) -w $(pwd) --rm action-swiftlint &>/dev/null; echo $?)
          [[ $STATUS == "0" ]]
        working-directory: ./test/Warnings
        shell: bash

      - name: Exit Status on Warnings with `--strict`
        run: |
          STATUS=$(docker run -v $(pwd):$(pwd) -w $(pwd) --rm action-swiftlint --strict &>/dev/null; echo $?)
          [[ $STATUS == "2" ]]
        working-directory: ./test/Warnings
        shell: bash

      - name: Output on Errors
        run: diff <(docker run -v $(pwd):$(pwd) -w $(pwd) --rm action-swiftlint|sort) expected.txt
        working-directory: ./test/errors
        shell: bash

      - name: Output on Warnings
        run: diff <(docker run -v $(pwd):$(pwd) -w $(pwd) --rm action-swiftlint|sort) expected.txt
        working-directory: ./test/Warnings
        shell: bash

      - name: Output on Warnings with WORKING_DIRECTORY environment variable
        run: diff <(docker run -v $(pwd):$(pwd) -w $(pwd) --rm --env WORKING_DIRECTORY=Warnings action-swiftlint|sort) <(cat Warnings/expected.txt | sed -E 's/^(.*)file=(.*),(.*)/\1file=Warnings\/\2,\3/')
        working-directory: ./test
        shell: bash
