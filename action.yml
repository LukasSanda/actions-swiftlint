name: 'GitHub Actions for SwiftLint'
description: 'A tool to enforce Swift style and conventions'
author: 'Jaehong Kang <sinoru@me.com>'
branding:
  icon: 'shield'
  color: 'orange'
inputs:
  swiftlint-version:
    description: "A SwiftLint version to use."
    required: true
    default: '0.47.1'
  working-directory:
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - run: |
        echo "{SWIFTLINT_PATH}={${{ github.action_path }}/SwiftLint}" >> $GITHUB_ENV
        echo "{SWIFTLINT_PACKAGE_ARGS}={--package-path '$SWIFTLINT_PATH' -c release --manifest-cache local}"
      shell: bash
    - uses: actions/checkout@v3
      with: 
        repository: 'realm/SwiftLint'
        ref: '${{ inputs.swiftlint-version }}'
        path: '${{ github.env.SWIFTLINT_PATH }}'
    - uses: actions/cache@v3
      with:
        path: '${{ github.env.SWIFTLINT_PATH }}/.build'
        key: swiftlint-${{ runner.os }}-spm-${{ inputs.swiftlint-version }}-${{ hashFiles('${{ github.env.SWIFTLINT_PATH }}/Package.*') }}
        restore-keys: |
          ${{ runner.os }}-spm-${{ inputs.swiftlint-version }}-
    - run: swift build $SWIFTLINT_PACKAGE_ARGS
      shell: bash
    - name: SwiftLint
      run: |
        # Copyright (c) 2018 Norio Nomura
        #
        # Permission is hereby granted, free of charge, to any person obtaining a copy
        # of this software and associated documentation files (the "Software"), to deal
        # in the Software without restriction, including without limitation the rights
        # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        # copies of the Software, and to permit persons to whom the Software is
        # furnished to do so, subject to the following conditions:
        #
        # The above copyright notice and this permission notice shall be included in all
        # copies or substantial portions of the Software.
        #
        # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        # SOFTWARE.
        #
        # convert swiftlint's output into GitHub Actions Logging commands
        # https://help.github.com/en/github/automating-your-workflow-with-github-actions/development-tools-for-github-actions#logging-commands

        function stripPWD() {
            if ! ${WORKING_DIRECTORY+false};
            then
                cd - > /dev/null
            fi
            sed -E "s/$(pwd|sed 's/\//\\\//g')\///"
        }

        function convertToGitHubActionsLoggingCommands() {
            sed -E 's/^(.*):([0-9]+):([0-9]+): (warning|error|[^:]+): (.*)/::\4 file=\1,line=\2,col=\3::\5/'
        }

        if ! ${WORKING_DIRECTORY+false};
        then
          cd ${WORKING_DIRECTORY}
        fi

        if ! ${DIFF_BASE+false};
        then
          changedFiles=$(git --no-pager diff --name-only --relative FETCH_HEAD $(git merge-base FETCH_HEAD $DIFF_BASE) -- '*.swift')

          if [ -z "$changedFiles" ]
          then
            echo "No Swift file changed"
            exit
          fi
        fi

        set -o pipefail && swift run $SWIFTLINT_PACKAGE_ARGS swiftlint "$@" -- $changedFiles | stripPWD | convertToGitHubActionsLoggingCommands
      shell: bash
      working-directory: '${{ github.workspace }}/${{ inputs.working-directory }}'
